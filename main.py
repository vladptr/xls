import discord
from discord.ext import commands
from discord.ui import View, Button
import yt_dlp
import asyncio
from dotenv import load_dotenv
import os

from webserver import keep_alive

intents = discord.Intents.default()
intents.guilds = True
intents.members = True
intents.voice_states = True
intents.message_content = True

bot = commands.Bot(command_prefix="!", intents=intents)

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –º—É–∑—ã–∫–∏
music_queue = []
repeat_mode = False

YDL_OPTIONS = {'format': 'bestaudio'}
FFMPEG_OPTIONS = {'options': '-vn'}

# –ü–µ—Ä–µ–º–µ–Ω–Ω—ã–µ –¥–ª—è –≥–æ–ª–æ—Å–æ–≤—ã—Ö –∫–∞–Ω–∞–ª–æ–≤
TRIGGER_CHANNELS = {
    "üî¥„Éª–°–æ–∑–¥–∞—Ç—å —Ä–∞–Ω–∫–µ–¥ —Ä—É–º—É": {"base": "üü¢„Éª–†–∞–Ω–∫–µ–¥ —Ä—É–º–∞", "category": "–†–∞–Ω–∫–µ–¥üî¥"}, # –ü–µ—Ä–≤–æ–µ —ç—Ç–æ –Ω–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ –∫–æ—Ç–æ—Ä—ã–π —Å–æ–∑–¥–∞–µ—Ç—Ä—É–º–∫–∏, –≤—Ç–æ—Ä–æ–µ —ç—Ç–æ –¥—ç—Ñ–æ–ª—Ç–Ω–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä—É–º–∫–∏, —Ç—Ä–µ—Ç—å–µ —ç—Ç–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è –≤ –∫–æ—Ç–æ—Ä–æ–π —Å–æ–∑–¥–∞–≤–∞—Ç—å—Å—è –±—É–¥—É—Ç —Ä—É–º–∫–∏
    "üî¥„Éª–°–æ–∑–¥–∞—Ç—å –ø–∞–±–ª–∏–∫ —Ä—É–º—É": {"base": "üü¢„Éª–ü–∞–±–ª–∏–∫ —Ä—É–º–∞", "category": "–ü–∞–±–ª–∏–∫üî¥"},
    "üî¥„Éª–°–æ–∑–¥–∞—Ç—å –∫–∞—Å—Ç–æ–º–Ω—É—é –∫–æ–º–Ω–∞—Ç—É": {"base": "üü¢„Éª–ö–∞—Å—Ç–æ–º –∏–≥—Ä–∞", "category": "–ö–∞—Å—Ç–æ–º–∫–∏üî¥"}
}

BUTTON_LABELS = ["CS:GO", "Dota", "Helldivers 2"] # —Ç—É—Ç –∫—Ä—á –∫–Ω–æ–ø–∫–∏ –¥–ª—è –∏–≥—Ä, —Ç–∏–ø–∞ –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å, –º–æ–∂–Ω–æ —É–¥–∞–ª–∏—Ç—å, –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å
LIMIT_BUTTONS = ["2", "4", "6", "99"] # –∫–Ω–æ–ø–∫–∏ –ª–∏–º–∏—Ç–æ–≤

created_channels = {}
channel_bases = {}

limit_name_mapping = {
    "üü¢„Éª–†–∞–Ω–∫–µ–¥ —Ä—É–º–∞": {
        "2": "üü¢„Éª–î—É–æ —Ä–∞–Ω–∫–µ–¥ —Ä—É–º",
        "4": "üü¢„Éª–°–∫–≤–∞–¥ —Ä–∞–Ω–∫–µ–¥ —Ä—É–º",
        "6": "üü¢„Éª–°–∫–≤–∞–¥+ —Ä–∞–Ω–∫–µ–¥ —Ä—É–º",
        "99": "üü¢„Éª–û–±–≥–æ–≤–æ—Ä–Ω–∞—è —Ä–∞–Ω–∫–µ–¥ —Ä—É–º" # –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ª–∏–º–∏—Ç–∞ –∫–∞–Ω–∞–ª–∞ –º–µ–Ω—è–µ—Ç—Å—è –Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ, –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞ —Å–≤–æ–µ (–≥–ª–∞–≤–Ω–æ–µ —Ü–∏—Ñ–µ—Ä–∫–∏ –Ω–µ —Ç—Ä–æ–≥–∞—Ç—å –∏–Ω–∞—á–µ –ø–æ—Ö–µ—Ä–∏—à—å)
    },
    "üü¢„Éª–ü–∞–±–ª–∏–∫ —Ä—É–º–∞": {
        "2": "üü¢„Éª–î—É–æ —Ä—É–º",
        "4": "üü¢„Éª–°–∫–≤–∞–¥ —Ä—É–º",
        "6": "üü¢„Éª–°–∫–≤–∞–¥+ —Ä—É–º",
        "99": "üü¢„Éª–û–±–≥–æ–≤–æ—Ä–Ω–∞—è —Ä—É–º" # –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ –ª–∏–º–∏—Ç–∞ –∫–∞–Ω–∞–ª–∞ –º–µ–Ω—è–µ—Ç—Å—è –Ω–∞ –Ω–∞–∑–≤–∞–Ω–∏–µ, –º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å –Ω–∞ —Å–≤–æ–µ (–≥–ª–∞–≤–Ω–æ–µ —Ü–∏—Ñ–µ—Ä–∫–∏ –Ω–µ —Ç—Ä–æ–≥–∞—Ç—å –∏–Ω–∞—á–µ –ø–æ—Ö–µ—Ä–∏—à—å)
    }
}

# –ú—É–∑ —Ñ—É–Ω–∫—Ü–∏–∏, —á–µ—Ä–µ–∑ –∫–æ–º–∞–Ω–¥—É "!" –Ω—É –∏ –ø—Ä–æ–ø–∏—Å—å –∫–æ–º–∞–Ω–¥—ã (–ø–æ –Ω–∞–∏—Ç–∏—é play skip –∏ —Ç–¥.)
async def play_next(ctx):
    global music_queue, repeat_mode
    if music_queue:
        url = music_queue[0] if not repeat_mode else music_queue[-1]

        with yt_dlp.YoutubeDL(YDL_OPTIONS) as ydl:
            info = ydl.extract_info(url, download=False)
            audio_url = info['url']

        source = await discord.FFmpegOpusAudio.from_probe(audio_url, **FFMPEG_OPTIONS)
        ctx.voice_client.play(source, after=lambda e: asyncio.run_coroutine_threadsafe(play_next(ctx), bot.loop))

        if not repeat_mode:
            music_queue.pop(0)
    else:
        await asyncio.sleep(1)

@bot.event
async def on_ready():
    print(f"‚úÖ Logged in as {bot.user}")

@bot.command()
async def ping(ctx):
    await ctx.send("–ø—à–ª –Ω—Ö")
    
@bot.command()
async def join(ctx):
    if ctx.author.voice:
        channel = ctx.author.voice.channel
        if ctx.voice_client is None:
            await channel.connect()
            await ctx.send("–ü–æ–¥–∫–ª—é—á–∏–ª—Å—è –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É.")
    else:
        await ctx.send("–¢—ã –¥–æ–ª–∂–µ–Ω –±—ã—Ç—å –≤ –≥–æ–ª–æ—Å–æ–≤–æ–º –∫–∞–Ω–∞–ª–µ.")

@bot.command()
async def play(ctx, url):
    music_queue.append(url)
    await ctx.send(f"–î–æ–±–∞–≤–ª–µ–Ω–æ: {url}")
    if not ctx.voice_client:
        await join(ctx)
    if not ctx.voice_client.is_playing():
        await play_next(ctx)

@bot.command()
async def repeat(ctx):
    global repeat_mode
    repeat_mode = not repeat_mode
    await ctx.send(f"–†–µ–∂–∏–º –ø–æ–≤—Ç–æ—Ä–∞ {'–≤–∫–ª—é—á–µ–Ω' if repeat_mode else '–≤—ã–∫–ª—é—á–µ–Ω'}")

@bot.command()
async def skip(ctx):
    if ctx.voice_client and ctx.voice_client.is_playing():
        ctx.voice_client.stop()
        await ctx.send("–ü—Ä–æ–ø—É—â–µ–Ω–æ.")

@bot.command()
async def queue(ctx):
    if music_queue:
        await ctx.send("–û—á–µ—Ä–µ–¥—å:\n" + "\n".join(music_queue))
    else:
        await ctx.send("–û—á–µ—Ä–µ–¥—å –ø—É—Å—Ç–∞.")

@bot.command()
async def playlist(ctx):
    if music_queue:
        await ctx.send("–ü–ª–µ–π–ª–∏—Å—Ç:\n" + "\n".join(music_queue))
    else:
        await ctx.send("–ü–ª–µ–π–ª–∏—Å—Ç –ø—É—Å—Ç.")

@bot.command()
async def playlist_add(ctx, url):
    music_queue.append(url)
    await ctx.send(f"–¢—Ä–µ–∫ –¥–æ–±–∞–≤–ª–µ–Ω –≤ –ø–ª–µ–π–ª–∏—Å—Ç: {url}")

@bot.command()
async def playlist_delete(ctx, index: int):
    if 0 <= index < len(music_queue):
        removed_track = music_queue.pop(index)
        await ctx.send(f"–¢—Ä–µ–∫ —É–¥–∞–ª–µ–Ω –∏–∑ –ø–ª–µ–π–ª–∏—Å—Ç–∞: {removed_track}")
    else:
        await ctx.send("–ù–µ–≤–µ—Ä–Ω—ã–π –∏–Ω–¥–µ–∫—Å —Ç—Ä–µ–∫–∞.")

@bot.command()
async def leave(ctx):
    if ctx.voice_client:
        await ctx.voice_client.disconnect()
        await ctx.send("–í—ã—à–µ–ª –∏–∑ –≥–æ–ª–æ—Å–æ–≤–æ–≥–æ –∫–∞–Ω–∞–ª–∞.")
    else:
        await ctx.send("–Ø –Ω–µ –ø–æ–¥–∫–ª—é—á–µ–Ω –∫ –≥–æ–ª–æ—Å–æ–≤–æ–º—É –∫–∞–Ω–∞–ª—É.")

# –ö–Ω–æ–ø–∫–∏ —Å –æ–≥—Ä–∞–Ω–∏—á–µ–Ω–∏—è–º–∏ –∏ —Ç–¥ –∏ —Ç–ø
class GameSelectView(View):
    def __init__(self, user_id, channel_id):
        super().__init__(timeout=300)
        for label in BUTTON_LABELS:
            self.add_item(GameButton(label, user_id, channel_id))

class GameButton(Button):
    def __init__(self, label, user_id, channel_id):
        super().__init__(label=label, style=discord.ButtonStyle.primary)
        self.user_id = user_id
        self.channel_id = channel_id

    async def callback(self, interaction: discord.Interaction):
        if interaction.user.id != self.user_id:
            await interaction.response.send_message("–¢—ã –Ω–µ —Å–æ–∑–¥–∞–≤–∞–ª —ç—Ç—É –∫–æ–º–Ω–∞—Ç—É!", ephemeral=True)
            return
        channel = interaction.guild.get_channel(self.channel_id)
        if channel:
            await channel.edit(name=self.label)
            await interaction.response.send_message(f"–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞: **{self.label}**", ephemeral=True)
        else:
            await interaction.response.send_message("–ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!", ephemeral=True)

class LimitButton(Button):
    def __init__(self, label, user_id, channel_id):
        super().__init__(label=label, style=discord.ButtonStyle.secondary)
        self.user_id = user_id
        self.channel_id = channel_id

    async def callback(self, interaction: discord.Interaction):
        if interaction.user.id != self.user_id:
            await interaction.response.send_message("–¢—ã –Ω–µ —Å–æ–∑–¥–∞–≤–∞–ª —ç—Ç—É –∫–æ–º–Ω–∞—Ç—É!", ephemeral=True)
            return

        channel = interaction.guild.get_channel(self.channel_id)
        if not channel:
            await interaction.response.send_message("–ö–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!", ephemeral=True)
            return

        limit = int(self.label)
        await channel.edit(user_limit=limit)

        base_name = channel_bases.get(channel.id)
        if base_name in limit_name_mapping:
            new_name = limit_name_mapping[base_name][self.label]
            await channel.edit(name=new_name)
            await interaction.response.send_message(
                f"–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏–º–∏—Ç: **{limit}** —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤\n–ù–∞–∑–≤–∞–Ω–∏–µ –∫–∞–Ω–∞–ª–∞ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞: **{new_name}**",
                ephemeral=True
            )
        else:
            await interaction.response.send_message(f"–£—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω –ª–∏–º–∏—Ç: **{limit}** —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤", ephemeral=True)

class SearchButton(Button):
    def __init__(self, user_id, voice_channel_id):
        super().__init__(label="–ü–æ–∏—Å–∫", style=discord.ButtonStyle.success)
        self.user_id = user_id
        self.voice_channel_id = voice_channel_id

    async def callback(self, interaction: discord.Interaction):
        if interaction.user.id != self.user_id:
            await interaction.response.send_message("–¢—ã –Ω–µ —Å–æ–∑–¥–∞–≤–∞–ª —ç—Ç–æ—Ç –∫–∞–Ω–∞–ª!", ephemeral=True)
            return

        guild = interaction.guild
        voice_channel = guild.get_channel(self.voice_channel_id)
        if not voice_channel:
            await interaction.response.send_message("–ì–æ–ª–æ—Å–æ–≤–æ–π –∫–∞–Ω–∞–ª –Ω–µ –Ω–∞–π–¥–µ–Ω!", ephemeral=True)
            return

        text_channel = discord.utils.get(guild.text_channels, name="üîç „Éª–ø–æ–∏—Å–∫ —Ç–∏–º—ã")
        if not text_channel:
            await interaction.response.send_message("–¢–µ–∫—Å—Ç–æ–≤—ã–π –∫–∞–Ω–∞–ª '–ø–æ–∏—Å–∫' –Ω–µ –Ω–∞–π–¥–µ–Ω!", ephemeral=True)
            return

        member_count = len(voice_channel.members)
        user_limit = voice_channel.user_limit

        # C–æ–æ–±—â–µ–Ω–∏–µ –Ω–∞–±–æ—Ä–∞
        if user_limit in [6, 99]:
            msg = f"+–æ—á–µ—Ä–µ–¥—å –Ω–∞ –∑–∞–º–µ–Ω—É —Ç–∏–º–µ–π—Ç–∞ <@&1159121098965786634> <#{voice_channel.id}>" # 1372898116877160519 id —Ä–æ–ª–∏ –∫–æ—Ç–æ—Ä—É—é –¥–æ–ª–∂–Ω–æ —Ç–µ–≥–∞—Ç—å –≤ –ø–æ–∏—Å–∫–µ —Ç–∏–º—ã (–∞–π–¥–∏—à–∫–∞ 1159121098965786634 —Å —Å–µ—Ä–≤–µ—Ä–∞), –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ –ª—é–±—É—é –¥—Ä—É–≥—É—é —Ä–æ–ª—å
        else:
            missing = user_limit - member_count
            if missing > 0:
                msg = f"+{missing} <@&1159121098965786634> <#{voice_channel.id}>"
            else:
                msg = f"+–æ–±—â–µ–Ω–∏–µ <@&1159121098965786634> <#{voice_channel.id}>"

        await text_channel.send(msg)
        await interaction.response.send_message("–°–æ–æ–±—â–µ–Ω–∏–µ –æ—Ç–ø—Ä–∞–≤–ª–µ–Ω–æ –≤ –∫–∞–Ω–∞–ª '–ø–æ–∏—Å–∫'.", ephemeral=True)


class LimitSelectViewWithSearch(View):
    def __init__(self, user_id, voice_channel_id):
        super().__init__(timeout=300)
        for label in LIMIT_BUTTONS:
            self.add_item(LimitButton(label, user_id, voice_channel_id))
        self.add_item(SearchButton(user_id, voice_channel_id))

@bot.event
async def on_ready():
    print(f"–ë–æ—Ç –∑–∞–ø—É—â–µ–Ω –∫–∞–∫ {bot.user}") # –ø—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ (—Ç–∏–ø–∞ –ø–∏—à–µ—Ç –µ—Å–ª–∏ –∑–∞–ø—É—â–µ–Ω, –µ—Å–ª–∏ –Ω–µ –∑–∞–ø—É—Å—Ç–∏—Ç—Å—è –±—É–¥—É—Ç –æ—à–∏–±–∫–∏, –º–± –ø—Ä–æ—Å—Ç–æ –µ–º—É –±–∏–±–ª –Ω–µ —Ö–≤–∞—Ç–∞–µ—Ç)

@bot.event
async def on_voice_state_update(member, before, after):
    guild = member.guild
    if before.channel and before.channel.id in created_channels:
        await asyncio.sleep(3)
        if len(before.channel.members) == 0:
            await before.channel.delete()
            created_channels.pop(before.channel.id, None)
            channel_bases.pop(before.channel.id, None)
            print(f"–£–¥–∞–ª—ë–Ω –ø—É—Å—Ç–æ–π –∫–∞–Ω–∞–ª: {before.channel.name}")

    if after.channel and after.channel.name in TRIGGER_CHANNELS:
        conf = TRIGGER_CHANNELS[after.channel.name]
        category = discord.utils.get(guild.categories, name=conf["category"])
        if not category:
            print(f"–ö–∞—Ç–µ–≥–æ—Ä–∏—è {conf['category']} –Ω–µ –Ω–∞–π–¥–µ–Ω–∞!")
            return

        existing = [ch for ch in guild.voice_channels if ch.name.startswith(conf["base"]) and ch.category == category]
        number = 1
        base_name = conf["base"]
        new_name = f"{base_name} #{number}"
        while any(ch.name == new_name for ch in existing):
            number += 1
            new_name = f"{base_name} #{number}"

        new_channel = await guild.create_voice_channel(new_name, category=category)
        await member.move_to(new_channel)

        created_channels[new_channel.id] = member.id
        channel_bases[new_channel.id] = base_name

        if conf["base"] == "–ö–∞—Å—Ç–æ–º –∏–≥—Ä–∞":
            view = GameSelectView(member.id, new_channel.id)
            await new_channel.send(f"{member.mention}, –≤—ã–±–µ—Ä–∏ –∏–≥—Ä—É –¥–ª—è **{new_channel.name}**:", view=view)
        elif conf["base"] in limit_name_mapping:
            view = LimitSelectViewWithSearch(member.id, new_channel.id)
            await new_channel.send(f"{member.mention}, –≤—ã–±–µ—Ä–∏ –ª–∏–º–∏—Ç —É—á–∞—Å—Ç–Ω–∏–∫–æ–≤ –¥–ª—è **{new_channel.name}**:", view=view)

token = os.getenv("TOKEN")

if not token:
    print("‚ùå TOKEN is missing!")
else:
    print("‚úÖ Token loaded!")


async def main():
    keep_alive()

    await bot.start(token)

asyncio.run(main())
